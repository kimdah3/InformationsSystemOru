@using InformationsSystemOru.Extensions
@model InformationsSystemOru.Models.BlogModel
@{
    ViewBag.Title = "EducationBlog";
    Layout = User.Identity.IsAdmin() ? "~/Views/Shared/_LayoutAdmin.cshtml" : "~/Views/Shared/_LayoutUser.cshtml";
}
<script src="~/scripts/tinymce/tinymce.min.js"></script>
<script type="text/javascript">
    tinyMCE.init({
        mode: "textareas",
        theme: "modern",
        plugins: "textcolor colorpicker",
        toolbar: "formatselect | bold italic underline | forecolor backcolor | bullist numlist",
        content_css: "~/Content/Site.css"
        });
</script>

<div class="row">

    <h1 class="text-center">Education</h1>
    <h3 class="text-center">News and articles regarding Örebro University, Informatics</h3>
    <br /><br />
    

    <div class="col-md-12">

        <div id="blogg" class="col-md-6">
            @using (Html.BeginForm("EducationBlog", "Blog", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {

                <div class="form-group">

                    @Html.LabelFor(model => model.NewPost.Title, "Title", htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.NewPost.Title, "TitleInput", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.NewPost.Title, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NewPost.Category, "Category", htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.NewPost.Category, "Kategori", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.NewPost.Category, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NewPost.Text, "Text", htmlAttributes: new { @class = "control-label" })
                    @Html.TextAreaFor(model => model.NewPost.Text, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.NewPost.Text, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">

                    <label for="file">Filename:</label>
                    @Html.TextBoxFor(model => model.NewPost.File, new { @class = "form-control", type = "file" })

                </div>

                <div>
                    <input type="submit" value="Post" class="btn btn-success" id="btnSend" />
                </div>

            }

        </div>

        <div class="col-md-12">
            <br />
            @if (Model.AllPosts != null)
            {
                foreach (var post in Model.AllPosts)
                {
                    <div class="well well-sm">
                        <h1 class="text-center">@post.Title</h1>
                        <h3 class="text-center">@post.Category</h3>
                        <h2 class="text-center">@Html.Raw(@post.Text)</h2>
                        @if (post.Filename != null)
                        {
                            <a href="@Url.Action("GetFile", "Profile", new{ path = post.FileUrl } )">@post.Filename</a>
                        }
                        <p>@post.DatePosted</p>
                    </div>
                }
            }
        </div>

    </div>

</div>